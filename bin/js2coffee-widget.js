// Document Ready (Run First)
$(function() {
    // Ace v1.1.9
    addScript('https://cdnjs.cloudflare.com/ajax/libs/ace/1.1.9/ace.js');    

    // coffee-script v1.9.0
    addScript('http://cdn.rawgit.com/jashkenas/coffeescript/1.9.0/extras/coffee-script.js');
    
    // js2coffee v2.0.3
    addScript('http://cdn.rawgit.com/js2coffee/js2coffee/v2.0.3/dist/js2coffee.js');    
});

function addScript(src) {
    var script = document.createElement("script");
    script.type = "text/javascript";
    script.src = src;
    
    $("head").append(script);
}

// Window Load (Run Second)
$(window).load(function() {
    // Any JS examples?
    if ($(".j2cw-js").length > 0)
        js2cs($(".j2cw-js"));
    
    // Any CS examples?
    if ($(".j2cw-cs").length > 0)
        cs2js($(".j2cw-cs"));
    
    addClickListeners();
});

function js2cs(js_element) {
    var widget =
        "<div class='embed-nav group' id='embed-nav'>\n" +
            "<ul>\n" +
                "<li><a id='js-link' class='active'>JavaScript</a></li>\n" +
                "<li><a id='cs-link'>CoffeeScript</a></li>\n" +
            "</ul>\n" +
        "</div>\n" +
        "<div id='output' data-border-style='none' data-header='true' style='height: 139px;'>\n" +
            "<div id='js-box' class='code-box active'></div>\n" +
            "<div id='cs-box' class='code-box'></div>\n" +
        "</div>\n";
    
    // Get code to be converted
    var js_code = "\n" + js_element.text();
    
    // Replace code with widget
    js_element.html(widget);
    
    // Add javascript code
    js_element.find("#js-box").html(js_code);
    
    // Add coffeescript code
    js_element.find("#cs-box").html("\n" + compile(js_code).code);
}

function cs2js(cs_element) {
    var widget =
        "<div class='embed-nav group' id='embed-nav'>\n" +
            "<ul>\n" +
                "<li><a id='js-link'>JavaScript</a></li>\n" +
                "<li><a id='cs-link' class='active'>CoffeeScript</a></li>\n" +
            "</ul>\n" +
        "</div>\n" +
        "<div id='output' data-border-style='none' data-header='true' style='height: 139px;'>\n" +
            "<div id='js-box' class='code-box'></div>\n" +
            "<div id='cs-box' class='code-box active'></div>\n" +
        "</div>\n";
    
    // Get code to be converted
    var cs_code = "\n" + cs_element.text();
    
    // Replace code with widget
    cs_element.html(widget);
    
    // Add javascript code
    cs_element.find("#js-box").html("\n" + compileReverse(cs_code).code);
    
    // Add coffeescript code
    cs_element.find("#cs-box").html(cs_code);
}

function addClickListeners() {       
    $("#js-link").click(function () {
        $('#js-link').addClass('active');
        $('#js-box').addClass('active');
        $('#cs-link').removeClass('active');
        $('#cs-box').removeClass('active');
    });

    $("#cs-link").click(function () {
        $('#cs-link').addClass('active');
        $('#cs-box').addClass('active');
        $('#js-link').removeClass('active');
        $('#js-box').removeClass('active');
    });
    
    configureEditor("js-box", "javascript");
    configureEditor("cs-box", "coffee");      
};

function configureEditor(editor_id, mode) {
    var editor = ace.edit(editor_id);

    editor.getSession().setMode("ace/mode/" + mode);
    editor.setTheme("ace/theme/twilight");
    editor.setReadOnly(true);
    editor.renderer.setShowGutter(false);
}

/*
* Function extracted from: http://js2.coffee/assets/app.js
* js2coffee source: https://github.com/js2coffee/js2coffee
*
* compiles code from js to coffee.
* returns the code (output js), error (Error object, if any), and output 
* of js2coffee() (used later for warnings).
*/

function compile(input) {
    var output, error, code;

    try {
      output = js2coffee.build(input);
      code = output.code;
      code += "\n# ---\n# generated by js2coffee " +
        js2coffee.version;
    } catch (err) {
      error = err;
      if (!err.start) throw err;
    }

    return {
      code: code,
      error: error,
      warnings: output && output.warnings 
    };
}

/*
* Function extracted from: http://js2.coffee/assets/app.js
* js2coffee source: https://github.com/js2coffee/js2coffee
*
* compiles coffee to js code.
* returns output similar to `compile`
*/

function compileReverse(input) {
    var output, error, code;

    try {
      code = CoffeeScript.compile(input, { bare: true });
      code += "\n// ---\n// generated by coffee-script " +
        CoffeeScript.VERSION;
      code = code.trim();
    } catch (err) {
      if (!err.location) throw err;

      // Convert to js2coffee-style errors
      err.description = err.message;
      err.start = {
        line: err.location.first_line + 1,
        column: err.location.first_column
      };
        
      if (err.location.last_line) {
        err.end = {
          line: err.location.last_line + 1,
          column: err.location.last_column + 1
        };
      }
        
      console.error(err);

      error = err;
    }

    return {
      code: code,
      error: error 
    };
}